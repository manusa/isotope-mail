name: Pull Request checks

on:
  push:
    branches-ignore:
      - 'master'
  pull_request:

env:
  SONAR_SCANNER_VERSION: 4.2.0.1873

jobs:
  build-server:
    name: 'Build Server'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Java 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Build
        run: |
          ./server/gradlew -p ./server/ check assemble
      - name: Save build files
        uses: actions/upload-artifact@v1
        with:
          name: server-build
          path: ./server/build
  build-client:
    name: 'Build Client'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: NPM Install
        run: |
          npm install --prefix ./client ./client
      - name: Test
        run: |
          npm run --prefix ./client test
      - name: Build
        if: success()
        run: |
          npm run --prefix ./client build
      - name: Save test coverage reports
        uses: actions/upload-artifact@v1
        with:
          name: client-coverage
          path: ./client/coverage
  sonar:
    needs: [build-server, build-client]
    name: 'Upload to Sonar'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Restore server-build
        uses: actions/download-artifact@v1
        with:
          name: server-build
      - name: Download client-coverage
        uses: actions/download-artifact@v1
        with:
          name: client-coverage
      - name: Move files to common location
        run: |
          mkdir -p ./server/build ./client/coverage \
          && mv ./server-build/* ./server/build \
          && mv ./client-coverage/* ./client/coverage
      - name: Download and install sonar-scanner
        run: |
          mkdir -p $HOME/.sonar \
          && wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip -O sonar-scanner.zip \
          && unzip sonar-scanner.zip -d $HOME/.sonar/ \
          && rm sonar-scanner.zip
      - name: SonarCloud
        run: |
          $HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux/bin/sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
          SONAR_SCANNER_OPTS: "-server"
